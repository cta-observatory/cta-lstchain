name: CI

on:
  push:
    branches:
      - v0.9.x
    tags:
      - '**'
  pull_request:

env:
  NUMBA_NUM_THREADS: 1
  MPLBACKEND: Agg
  PYTEST_ADDOPTS: --color=yes

jobs:
  pyflakes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: pyflakes
        run: |
          pip install pyflakes
          pyflakes lstchain

  tests:
    needs: pyflakes
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        python-version: ["3.8"]
        ctapipe-version: [v0.12.0]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare mamba installation
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          # setup correct python version
          sed -i -e "s/- python=.*/- python=$PYTHON_VERSION/g" environment.yml

      - name: Mamba setup
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          cache-downloads: true

      - name: Install dependencies
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          CTAPIPE_VERSION: ${{ matrix.ctapipe-version }}

        run: |
          python --version
          echo "Installing additional pip packages"
          # we install ctapipe using pip to be able to select any commit, e.g. the current master
          pip install \
            "git+https://github.com/cta-observatory/ctapipe@$CTAPIPE_VERSION" \
            pytest-cov 'coverage!=6.3.0' pytest-xdist

          echo "pip install -e ."
          pip install -e .

      - name: Download test data
        env:
          TEST_DATA_USER: ${{ secrets.test_data_user }}
          TEST_DATA_PASSWORD: ${{ secrets.test_data_password }}
        run: |
          ./download_test_data.sh

      - name: Tests
        run: |
          pytest -n auto --dist loadscope --cov --cov-report=xml -m 'private_data or not private_data' lstchain

      - uses: codecov/codecov-action@v1
        with:
          # disable gcov, not needed
          functionalities: gcov

  docs:
    needs: pyflakes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install doc dependencies
        run: |
          sudo apt update --yes && sudo apt install --yes git build-essential pandoc graphviz
          pip install -U pip setuptools wheel
          pip install -e .[docs]
          git describe --tags
          python -c 'import lstchain; print(lstchain.__version__)'
      - name: Build docs
        run: cd docs && make html SPHINXOPTS="-W --keep-going -n --color -j auto"

      - name: Deploy to gihub pages
        # only run on push to master
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/_build/html
          CLEAN: true
          SINGLE_COMMIT: true
